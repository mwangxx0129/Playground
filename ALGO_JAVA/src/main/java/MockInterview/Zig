   1
 /    \
2    3

[
[1],
[3,2]
]

breath-first search
class node{
	int val;
vector<node*> children;
	node(int v): val(val, left(NULL), right(NULL){}
};

vector<vector<int>> bfs(node* root) {
	vector<vector<int>> res;
	if(root ==NULL)	return res;
	queue<node*> q;
	q.push(root);
	int depth = 1;
	while(!q.empty()) {
		int n = q.size();
		vector<int> tmp;
		for(int i = 0; i < n; i++) {
			node *x = q.top();
q.pop();

tmp.push_back(x->val);
}
if(depth % 2 == 0)
	reverse(tmp.begin(), tmp.end());
res.push_back(tmp);
depth++;

}
return res;
}




a
Carlify question：
Input API, TreeNode, CSV, file system, stream （TreeNode）
Output 。。。(vector<vector<node *>>)
Corner case: null ….
Description   -> visualization result

Solution：
Even odd
Define TreeNode

Check：
	Example ->  code
	Corner case

Follow up:


